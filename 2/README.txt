Низкоуровневый протокол обмена файлами
================================
Протокол обмена файлами уровня приложения с поддержкой загрузки/выгрузки и индексированного поиска

Протокол обмена файлами предоставляет следующие возможности:
1. Запрос «IndexGet», который может запрашивать разные стили одного и того же индекса
общую папку на другом клиенте, как указано ниже. История запросов
сделанные любыми клиентами, должны поддерживаться на каждом из клиентов соответственно.

а. Запрос «ShortList», указывающий, что запрашивающий клиент хочет знать только
имена файлов, выбранные из временных меток, указанных запрашивающим клиентом,
т. е. клиент хочет узнать только о нескольких файлах.

Например, пример запроса: IndexGet<space>ShortList<space>starting-timestamp<
пробел>метка конечного времени<CRLF/EOL>
Ответ должен включать «имена», «размеры», отметку времени «последнее изменение» и
"тип" файлов (если есть)

б. Запрос «LongList», указывающий, что запрашивающий клиент хочет знать
весь список каталога общей папки, включая «имена»,
«размеры», «отметка времени последнего изменения» и «тип» (если доступно)

Например, аналогично приведенному выше с необходимыми изменениями.

в. Запрос «RegEx», указывающий, что запрашивающий клиент хочет знать список
файлов, которые содержат шаблон регулярного выражения в своих именах файлов. 
ответ должен включать все имена файлов, которые «содержат» регулярное выражение
шаблон в их именах, размерах файлов и «типе» (при наличии).

Например, IndexGet<space>RegEx<space>"*mp3"<CRLF/EOL>

2. Запрос «FileHash» указывает, что клиент должен разрешить клиенту проверять,
содержимое любого файла изменилось. Должны поддерживаться два типа FileHash:

а. Запрос «Проверить», который дает имя файла, который клиент хочет
хэш для. Ответ должен содержать хеш MD5 файла и имя
файл и отметку времени последнего изменения.

Например, FileHash<space>Verify<space>Name-of-file<CRLF/EOL>

б. Запрос «Проверить все», который используется для периодической проверки изменений в
файл. Ответ должен включать хэши всех файлов, их имена и
отметка времени последнего изменения.

Например, FileHash<space>CheckAll<CRLF/EOL>

в. Запрос «FileDownload», который включает имя файла, который клиент
хочет скачать. Ответ должен включать файл, имя файла, файл
размер, хэш MD5 и отметку времени последнего изменения файла. Файл
Параметр size" должен использоваться запрашивающим клиентом для выделения памяти и
получить файл в выделенной памяти.

Например, FileDownload<space>Name-of-file<CRLF/EOL>

д. Запрос «FileUpload», включающий имя и размер файла,
клиент хочет загрузить. Другой клиент может либо отправить «FileUpload Deny», либо
Ответ «Разрешить загрузку файлов». Другой клиент должен использовать параметр размера файла
для выделения памяти, как это сделано в запросе «FileUpload». Клиент должен загрузить
файл, его хэш md5 и отметку времени, если он получает «FileUpload Allow»
ответ. Если он получает «FileUpload Deny», клиент должен вернуться к
прослушивание других запросов.

Например, FileUpload<space>Name-of-file<CRLF/EOL>

ф. Запросы «FileUpload» или «FileDownload» могут обслуживаться через UDP или TCP.
основанное соединение. Если такой сокет недоступен, его следует создать, и оба
клиенты должны использовать этот сокет для обмена файлами.
